"use strict";var _promises=_interopRequireDefault(require("dns/promises"));Object.defineProperty(exports,"__esModule",{value:!0}),exports.caa=caa,exports.cname=cname,exports.lookup=lookup,exports.mx=mx,exports.naptr=naptr,exports.ns=ns,exports.ptr=ptr,exports.reverse=reverse,exports.soa=soa,exports.srv=srv,exports.txt=txt;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}async function soa(domain,timeout=2e3){let result={error:void 0,type:"DNS/SOA",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveSoa(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function cname(domain,timeout=2e3){let result={error:void 0,type:"DNS/CNAME",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveCname(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function mx(domain,timeout=2e3){let result={error:void 0,type:"DNS/MX",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveMx(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function txt(domain,timeout=2e3){let result={error:void 0,type:"DNS/TXT",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveTxt(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function srv(domain,timeout=2e3){let result={error:void 0,type:"DNS/SRV",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveSrv(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function ns(domain,timeout=2e3){let result={error:void 0,type:"DNS/NS",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveNs(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function caa(domain,timeout=2e3){let result={error:void 0,type:"DNS/CAA",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveCaa(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function ptr(domain,timeout=2e3){let result={error:void 0,type:"DNS/PTR",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolvePtr(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function naptr(domain,timeout=2e3){let result={error:void 0,type:"DNS/NAPTR",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.resolveNaptr(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function reverse(ip,timeout=2e3){let result={error:void 0,type:"DNS/REVERSE",ip:ip,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.reverse(ip).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}async function lookup(domain,timeout=2e3){let result={error:void 0,type:"DNS/LOOKUP",domain:domain,records:[]};return new Promise(resolve=>{let to=setTimeout(()=>{result.error="ETIMEDOUT",resolve(result)},timeout);_promises.default.lookup(domain).then(records=>{clearTimeout(to),result.records=records,resolve(result)}).catch(error=>{"ENODATA"!=error.code&&(result.error=error.code),resolve(result)})})}